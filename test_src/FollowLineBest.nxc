task main(){
int Kp = 900;
int Ki = 0;
int Kd = 0;
int offset;
int Tp = 50;
int integral1 = 0;
int integral2 = 0;
int lastError1 = 0;
int lastError2 = 0;
int derivative1 = 0;
int derivative2 = 0;
int near = 25;
SetSensorType(S1, SENSOR_TYPE_LIGHT_ACTIVE);
SetSensorMode(S1, SENSOR_MODE_PERCENT);
SetSensorType(S2, SENSOR_TYPE_LIGHT_ACTIVE);
SetSensorMode(S2, SENSOR_MODE_PERCENT);
SetSensorType(S3, SENSOR_TYPE_LIGHT_ACTIVE);
SetSensorMode(S3, SENSOR_MODE_PERCENT);
SetSensorLowspeed(S4);

offset = (SensorValue(S1) + SensorValue(S2))/2;
Wait(500);
//rechnet offset aus,
//vor dem starten ein Sensor über weis und einen über schwarz setzen

while(true){
    if(SensorUS(S4) < near){
    //Wenn der US eine Wand erkennt
        if (Sensor(S1) > offset &&
            Sensor(S2) > offset &&
            Sensor(S2) > offset){
            
            OnFwd(OUT_AC,50);
            Wait(1000);
            OnFwd(OUT_A,60);
            OnRev(OUT_C,30);
            Wait(1700);
            //Dreht sich um 180° wenn S1, S2 und S3 auf weiß stehen
        }
        else if (
            Sensor(S1) > offset ||
            Sensor(S2) > offset ||
            Sensor(S3) > offset){
            
            Off(OUT_AC);
            until(SensorUS(S4) > near);
            //hält an wenn einer der Sensoren auf schwarz steht
        }
    }
    int LightValue1 = SensorValue(S1);
    int LightValue2 = SensorValue(S2);
    int error1 = LightValue1 - offset;
    int error2 = LightValue2 - offset;
    integral1 =(2/3)*integral1 + error1;
    integral2 =(2/3)*integral2 + error2;
    derivative1 = error1 - lastError1;
    derivative2 = error2 - lastError2;
    int Turn1 = ((Kp * error1) + (Ki * integral1) + (Kd * derivative1)) / 100;
    int Turn2 = ((Kp * error2) + (Ki * integral2) + (Kd * derivative2)) / 100;
    int powerA = Tp + Turn1;
    int powerC = Tp + Turn2;
    lastError1 = error1;
    lastError2 = error2;
    
    if(powerA > 0 && powerC > 0){
        OnRev(OUT_AC, Tp);
        //fährt gerade aus wenn S1 und S2 auf weis stehen
    }
    else if(powerA <= 0 && powerC <= 0){
        Off(OUT_C);
        OnRev(OUT_A, powerC);
        //fährt nach rechts wenn S1 und S2 auf schwarz
    }
    else if(powerA <= 0){
        Off(OUT_A);
        OnRev(OUT_C, powerA);
        //fährt nach links wenn S2 auf schwarz
    }
    else if(powerC <= 0){
        Off(OUT_C);
        OnRev(OUT_A, powerC);
        //fährt nach rechts wenn S1 auf schwarz
    }



}
}

